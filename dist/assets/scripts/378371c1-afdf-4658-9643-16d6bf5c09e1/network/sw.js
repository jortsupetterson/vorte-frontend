var m=Object.defineProperty;var d=(e,t)=>m(e,"name",{value:t,configurable:!0});async function h(e,{cacheName:t="service-cache",concurrency:a=self.navigator?.hardwareConcurrency||8}={}){if(!Array.isArray(e)||e.length===0)return{total:0,cached:0,failed:0};let f=self.registration?.scope||self.location?.origin||"/",c=e.map(s=>new URL(s,f).toString()),p=await caches.open(t),C=0,o=0,i=0,E=Math.max(1,Math.min(Number(a)||8,c.length));return await Promise.all(Array.from({length:E},async()=>{for(;;){let s=C++;if(s>=c.length)return;let g=c[s];try{let l=new Request(g,{cache:"reload"}),r=await fetch(l);r.ok||r.type==="opaque"?(await p.put(l,r.clone()),o++):i++}catch{i++}}})),{total:c.length,cached:o,failed:i}}d(h,"reCache");var n="v0",A=`pre-cache-${n}`,H=`assets-cache-${n}`,U=`services-cache-${n}`,u={reCache:h},w=["/scripts/app.js"];self.addEventListener("install",e=>{e.waitUntil(caches.open(A).then(t=>t.addAll(w))),self.skipWaiting()});self.addEventListener("activate",e=>{e.waitUntil(self.clients.claim())});self.addEventListener("message",e=>{let t=e.data?.task||e.data,a=u[t];e.data?.id&&e.source?.postMessage({type:"ACK",id:e.data.id}),typeof a=="function"&&e.waitUntil(a(n,e.data?.targets))});self.addEventListener("fetch",e=>{});
