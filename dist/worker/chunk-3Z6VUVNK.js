var m=Object.defineProperty;var a=(t,e)=>m(t,"name",{value:e,configurable:!0});function b(t){if(typeof t!="string")throw new TypeError(`Expected header to be a string, but received ${typeof t}`);return Object.fromEntries(t.split("; ").filter(Boolean).map(e=>{let n=e.indexOf("="),o=decodeURIComponent(e.substring(0,n)),r=decodeURIComponent(e.substring(n+1));return[o,r]}))}a(b,"getCookies");var p=null;async function u(t){if(!p){let e=await t.COOKIES_ENC_KEY.get(),n=Uint8Array.from(atob(e),o=>o.charCodeAt(0));p=crypto.subtle.importKey("raw",n,{name:"AES-GCM"},!1,["encrypt","decrypt"])}return p}a(u,"getCryptoKey");async function g(t,e){if(!t)return null;let n=await u(e),[o,r]=t.split(":"),i=Uint8Array.from(atob(o),c=>c.charCodeAt(0)),s=Uint8Array.from(atob(r),c=>c.charCodeAt(0)),y=await crypto.subtle.decrypt({name:"AES-GCM",iv:i},n,s);return new TextDecoder().decode(y)}a(g,"getDecryptedCookie");async function A(t,e,n,o){let r=await u(n),i=crypto.getRandomValues(new Uint8Array(12)),s=await crypto.subtle.encrypt({name:"AES-GCM",iv:i},r,new TextEncoder().encode(e)),y=btoa(String.fromCharCode(...i)),c=btoa(String.fromCharCode(...new Uint8Array(s))),f=`${y}:${c}`,d=`${t}=${f}; HttpOnly; Secure; SameSite=Strict; Path=/;`;return typeof o=="number"&&o>0&&(d+=` Max-Age=${o};`),d}a(A,"getEncryptedCookie");export{a,b,g as c,A as d};
