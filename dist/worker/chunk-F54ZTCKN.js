var l=Object.defineProperty;var a=(t,e)=>l(t,"name",{value:e,configurable:!0});function C(t){if(typeof t!="string")throw new TypeError(`Expected header to be a string, but received ${typeof t}`);return Object.fromEntries(t.split("; ").filter(Boolean).map(e=>{let o=e.indexOf("="),n=decodeURIComponent(e.substring(0,o)),r=decodeURIComponent(e.substring(o+1));return[n,r]}))}a(C,"getCookies");var p=null;async function u(t){if(!p){let e=await t.COOKIES_ENC_KEY.get(),o=Uint8Array.from(atob(e),n=>n.charCodeAt(0));if(o.length!==32)throw new Error(`Invalid key length ${o.length*8} bits \u2014 required 256 bits`);p=crypto.subtle.importKey("raw",o,{name:"AES-GCM"},!1,["encrypt","decrypt"])}return p}a(u,"getCryptoKey");async function b(t,e){if(!t)return null;let o=await u(e),[n,r]=t.split(":"),i=Uint8Array.from(atob(n),c=>c.charCodeAt(0)),s=Uint8Array.from(atob(r),c=>c.charCodeAt(0)),y=await crypto.subtle.decrypt({name:"AES-GCM",iv:i},o,s);return new TextDecoder().decode(y)}a(b,"getDecryptedCookie");async function w(t,e,o,n){let r=await u(o),i=crypto.getRandomValues(new Uint8Array(12)),s=await crypto.subtle.encrypt({name:"AES-GCM",iv:i},r,new TextEncoder().encode(e)),y=btoa(String.fromCharCode(...i)),c=btoa(String.fromCharCode(...new Uint8Array(s))),f=`${y}:${c}`,d=`${t}=${f}; HttpOnly; Secure; SameSite=Lax; Path=/;`;return typeof n=="number"&&n>0&&(d+=` Max-Age=${n};`),d}a(w,"getEncryptedCookie");export{a,C as b,b as c,w as d};
